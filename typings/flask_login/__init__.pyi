# Type stubs for flask_login
from typing import Any, Optional, Callable, TypeVar, Union
from flask import Flask

F = TypeVar('F', bound=Callable[..., Any])

class UserMixin:
    def is_authenticated(self) -> bool: ...
    def is_active(self) -> bool: ...
    def is_anonymous(self) -> bool: ...
    def get_id(self) -> str: ...

class AnonymousUserMixin:
    def is_authenticated(self) -> bool: ...
    def is_active(self) -> bool: ...
    def is_anonymous(self) -> bool: ...
    def get_id(self) -> Optional[str]: ...

class LoginManager:
    def __init__(self, app: Optional[Flask] = None, add_context_processor: bool = True) -> None: ...
    def init_app(self, app: Flask, add_context_processor: bool = True) -> None: ...
    def user_loader(self, callback: Callable[[str], Any]) -> Callable[[str], Any]: ...

def login_required(func: F) -> F: ...
def login_user(user: Any, remember: bool = False, duration: Optional[Any] = None, force: bool = False, fresh: bool = True) -> bool: ...
def logout_user() -> bool: ...

current_user: Any